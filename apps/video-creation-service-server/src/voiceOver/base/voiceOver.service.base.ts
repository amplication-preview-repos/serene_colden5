/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, VoiceOver as PrismaVoiceOver } from "@prisma/client";

export class VoiceOverServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.VoiceOverCountArgs, "select">
  ): Promise<number> {
    return this.prisma.voiceOver.count(args);
  }

  async voiceOvers<T extends Prisma.VoiceOverFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.VoiceOverFindManyArgs>
  ): Promise<PrismaVoiceOver[]> {
    return this.prisma.voiceOver.findMany<Prisma.VoiceOverFindManyArgs>(args);
  }
  async voiceOver<T extends Prisma.VoiceOverFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.VoiceOverFindUniqueArgs>
  ): Promise<PrismaVoiceOver | null> {
    return this.prisma.voiceOver.findUnique(args);
  }
  async createVoiceOver<T extends Prisma.VoiceOverCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.VoiceOverCreateArgs>
  ): Promise<PrismaVoiceOver> {
    return this.prisma.voiceOver.create<T>(args);
  }
  async updateVoiceOver<T extends Prisma.VoiceOverUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.VoiceOverUpdateArgs>
  ): Promise<PrismaVoiceOver> {
    return this.prisma.voiceOver.update<T>(args);
  }
  async deleteVoiceOver<T extends Prisma.VoiceOverDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.VoiceOverDeleteArgs>
  ): Promise<PrismaVoiceOver> {
    return this.prisma.voiceOver.delete(args);
  }
}
